!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("react")):"function"==typeof define&&define.amd?define(["exports","react"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).reactRefBoundary={},e.React)}(this,(function(e,t){"use strict";function r(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var n=r(t),o=n.default.createContext(void 0);e.BoundaryProvider=function(e){var t=e.children,r=n.default.useState([])[0];return n.default.createElement(o.Provider,{value:{addRef:function(e){return r.push(e),function(){return r.splice(r.indexOf(e),1)}},refs:r}},t)},e.useBoundary=function(){var e=n.default.useContext(o);if(!e)throw new Error("Missing react-ref-boundary context. Check for correct use of BoundaryProvider");return{refs:e.refs}},e.useRef=function(e){var t=n.default.useRef(e),r=n.default.useContext(o);if(!r)throw new Error("react-ref-boundary: addRef not found on context. You might be missing the BoundaryProvider or have multiple instances of react-ref-boundary");return n.default.useEffect((function(){return r.addRef(t)})),t},Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=react-ref-boundary.min.js.map
