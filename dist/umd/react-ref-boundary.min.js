!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("react")):"function"==typeof define&&define.amd?define(["exports","react"],r):r((e="undefined"!=typeof globalThis?globalThis:e||self).reactRefBoundary={},e.React)}(this,(function(e,r){"use strict";function t(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var n=t(r);function o(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,n=new Array(r);t<r;t++)n[t]=e[t];return n}function u(e,r){return function(e){if(Array.isArray(e))return e}(e)||function(e,r){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var n,o,u=[],f=!0,i=!1;try{for(t=t.call(e);!(f=(n=t.next()).done)&&(u.push(n.value),!r||u.length!==r);f=!0);}catch(e){i=!0,o=e}finally{try{f||null==t.return||t.return()}finally{if(i)throw o}}return u}}(e,r)||function(e,r){if(!e)return;if("string"==typeof e)return o(e,r);var t=Object.prototype.toString.call(e).slice(8,-1);"Object"===t&&e.constructor&&(t=e.constructor.name);if("Map"===t||"Set"===t)return Array.from(t);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return o(e,r)}(e,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}var f=r.createContext(null);e.BoundaryProvider=function(e){var t=e.children,o=u(r.useState([]),1)[0];return n.default.createElement(f.Provider,{value:{addRef:function(e){return o.push(e),function(){return o.splice(o.indexOf(e),1)}},refs:o}},t)},e.useBoundary=function(){var e=r.useContext(f);if(!e)throw new Error("Missing react-ref-boundary context. Check for correct use of BoundaryProvider");return{refs:e.refs}},e.useRef=function(){var e=r.useRef(),t=r.useContext(f);if(!t)throw new Error("Missing react-ref-boundary context. Check for correct use of BoundaryProvider");return r.useEffect((function(){return t.addRef(e)})),e},Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=react-ref-boundary.min.js.map
