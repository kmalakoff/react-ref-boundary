!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("react")):"function"==typeof define&&define.amd?define(["exports","react"],r):r((e="undefined"!=typeof globalThis?globalThis:e||self).reactRefBoundary={},e.React)}(this,(function(e,r){"use strict";function t(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var n=t(r),o=n.default.createContext(void 0),u=function(e){var r=e.children,t=n.default.useState([])[0];return n.default.createElement(o.Provider,{value:{addRef:function(e){return t.push(e),function(){return t.splice(t.indexOf(e),1)}},refs:t}},r)};function f(e){var r=n.default.useRef(e),t=n.default.useContext(o);if(!t)throw new Error("react-ref-boundary: addRef not found on context. You might be missing the BoundaryProvider or have multiple instances of react-ref-boundary");return n.default.useEffect((function(){return t.addRef(r)})),r}function d(){var e=n.default.useContext(o);if(!e)throw new Error("Missing react-ref-boundary context. Check for correct use of BoundaryProvider");return{refs:e.refs}}var a={BoundaryProvider:u,useRef:f,useBoundary:d};e.BoundaryProvider=u,e.default=a,e.useBoundary=d,e.useRef=f,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=react-ref-boundary.min.js.map
